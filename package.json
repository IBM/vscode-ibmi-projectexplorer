{
  "name": "vscode-ibmi-projectexplorer",
  "displayName": "Project Explorer for IBM i",
  "description": "%description%",
  "publisher": "IBM",
  "version": "0.0.1",
  "repository": {
    "url": "https://github.com/IBM/vscode-ibmi-projectexplorer"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "extensionDependencies": [
    "HalcyonTechLtd.code-for-ibmi"
  ],
  "l10n": "./l10n",
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "projectExplorer",
          "name": "%explorer.projectExplorer%",
          "icon": "$(remote-explorer)"
        },
        {
          "id": "jobLog",
          "name": "%explorer.jobLog%",
          "icon": "$(book)"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "projectExplorer",
        "contents": "%viewsWelcome.projectExplorer.noWorkspace%",
        "when": "workspaceFolderCount == 0"
      },
      {
        "view": "projectExplorer",
        "contents": "%viewsWelcome.projectExplorer.scanning%",
        "when": "workspaceFolderCount > 0"
      },
      {
        "view": "jobLog",
        "contents": "%viewsWelcome.jobLog.noWorkspace%",
        "when": "workspaceFolderCount == 0"
      },
      {
        "view": "jobLog",
        "contents": "%viewsWelcome.jobLog.scanning%",
        "when": "workspaceFolderCount > 0"
      }
    ],
    "submenus": [
      {
        "id": "projectExplorer.goTo",
        "label": "%submenus.projectExplorer.gotTo%",
        "icon": "$(server-environment)"
      }
    ],
    "commands": [
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.projectExplorer.goToObjectBrowser",
        "title": "%commands.projectExplorer.goToObjectBrowser%"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.projectExplorer.goToIFSBrowser",
        "title": "%commands.projectExplorer.goToIFSBrowser%"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.projectExplorer.refreshProjectExplorer",
        "title": "%commands.projectExplorer.refreshProjectExplorer%",
        "icon": "$(refresh)"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.setActiveProject",
        "title": "%commands.projectExplorer.setActiveProject%",
        "icon": "$(circle-filled)"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.projectExplorer.addLibraryListEntry",
        "title": "%commands.projectExplorer.addLibraryListEntry%",
        "icon": "$(add)"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.projectExplorer.setCurrentLibrary",
        "title": "%commands.projectExplorer.setCurrentLibrary%",
        "icon": "$(edit)"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.projectExplorer.removeFromLibraryList",
        "title": "%commands.projectExplorer.removeFromLibraryList%",
        "icon": "$(close)"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.addToIncludePaths",
        "title": "%commands.projectExplorer.addToIncludePaths%",
        "icon": "$(add)"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.revealInExplorer",
        "title": "%commands.projectExplorer.revealInExplorer%",
        "icon": "$(arrow-right)"
      },
      {
        "category": "Project Explorer",
        "command": "vscode-ibmi-projectexplorer.removeFromIncludePaths",
        "title": "%commands.projectExplorer.removeFromIncludePaths%",
        "icon": "$(close)"
      },
      {
        "category": "Job Log",
        "command": "vscode-ibmi-projectexplorer.jobLog.refreshJobLog",
        "title": "%commands.jobLog.refreshJobLog%",
        "icon": "$(refresh)"
      },
      {
        "category": "Job Log",
        "command": "vscode-ibmi-projectexplorer.jobLog.showJobLog",
        "title": "%commands.jobLog.showJobLog%",
        "icon": "$(book)"
      },
      {
        "category": "Job Log",
        "command": "vscode-ibmi-projectexplorer.jobLog.showBuildOutput",
        "title": "%commands.jobLog.showBuildOutput%",
        "icon": "$(note)"
      },
      {
        "category": "Job Log",
        "command": "vscode-ibmi-projectexplorer.jobLog.clearJobLogs",
        "title": "%commands.jobLog.clearJobLogs%",
        "icon": "$(clear-all)"
      },
      {
        "category": "Job Log",
        "command": "vscode-ibmi-projectexplorer.jobLog.copy",
        "title": "%commands.jobLog.copy%"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-ibmi-projectexplorer.setActiveProject",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.addLibraryListEntry",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.setCurrentLibrary",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.removeFromLibraryList",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.addToIncludePaths",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.revealInExplorer",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.removeFromIncludePaths",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.showJobLog",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.showBuildOutput",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.clearJobLogs",
          "when": "never"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.copy",
          "when": "never"
        }
      ],
      "projectExplorer.goTo": [
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.goToObjectBrowser",
          "when": "view == projectExplorer",
          "group": "0_goTo@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.goToIFSBrowser",
          "when": "view == projectExplorer",
          "group": "0_goTo@1"
        }
      ],
      "view/title": [
        {
          "submenu": "projectExplorer.goTo",
          "when": "view == projectExplorer && code-for-ibmi:connected",
          "group": "navigation@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.refreshProjectExplorer",
          "when": "view == projectExplorer",
          "group": "navigation@1"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.refreshJobLog",
          "when": "view == jobLog",
          "group": "navigation@0"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-ibmi-projectexplorer.setActiveProject",
          "when": "view == projectExplorer && viewItem =~ /^project_inactive.*/",
          "group": "inline@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.addLibraryListEntry",
          "when": "view == projectExplorer && viewItem =~ /^libraryList.*/",
          "group": "inline@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.setCurrentLibrary",
          "when": "view == projectExplorer && viewItem =~ /^libraryList.*/",
          "group": "inline@1"
        },
        {
          "command": "vscode-ibmi-projectexplorer.projectExplorer.removeFromLibraryList",
          "when": "view == projectExplorer && viewItem =~ /^library_(current|user).*/",
          "group": "inline@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.addToIncludePaths",
          "when": "view == ifsBrowser && viewItem =~ /^directory.*/",
          "group": "1_projectexplorer@1"
        },
        {
          "command": "vscode-ibmi-projectexplorer.addToIncludePaths",
          "when": "view == projectExplorer && viewItem =~ /^includePaths.*/",
          "group": "inline@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.revealInExplorer",
          "when": "view == projectExplorer && viewItem =~ /^includePath_local.*/",
          "group": "inline@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.removeFromIncludePaths",
          "when": "view == projectExplorer && viewItem =~ /^includePath.*/",
          "group": "inline@1"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.showJobLog",
          "when": "view == jobLog && viewItem =~ /^project.*/",
          "group": "inline@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.showJobLog",
          "when": "view == jobLog && viewItem =~ /^project.*/",
          "group": "0_viewFile@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.showBuildOutput",
          "when": "view == jobLog && viewItem =~ /^project.*/",
          "group": "inline@1"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.showBuildOutput",
          "when": "view == jobLog && viewItem =~ /^project.*/",
          "group": "0_viewFile@1"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.clearJobLogs",
          "when": "view == jobLog && viewItem =~ /^project.*/",
          "group": "1_modification@0"
        },
        {
          "command": "vscode-ibmi-projectexplorer.jobLog.copy",
          "when": "view == jobLog && viewItem =~ /^command.*/",
          "group": "1_modification@0"
        }
      ]
    },
    "colors": [
      {
        "id": "projectExplorer.systemLibrary",
        "description": "%colors.projectExplorer.systemLibraries%",
        "defaults": {
          "dark": "#4CB1FF",
          "light": "#4CB1FF"
        }
      },
      {
        "id": "projectExplorer.currentLibrary",
        "description": "%colors.projectExplorer.currentLibrary%",
        "defaults": {
          "dark": "#4CAF4F",
          "light": "#4CAF4F"
        }
      },
      {
        "id": "projectExplorer.userLibrary",
        "description": "%colors.projectExplorer.userLibraries%",
        "defaults": {
          "dark": "#C79F0C",
          "light": "#C79F0C"
        }
      },
      {
        "id": "joblog.local",
        "description": "%colors.jobLog.local%",
        "defaults": {
          "dark": "#FFA500",
          "light": "#FFA500"
        }
      },
      {
        "id": "joblog.severity.0",
        "description": "%colors.jobLog.severity.0%",
        "defaults": {
          "dark": "#87d167",
          "light": "#87d167"
        }
      },
      {
        "id": "joblog.severity.10",
        "description": "%colors.jobLog.severity.10%",
        "defaults": {
          "dark": "#b17cbc",
          "light": "#b17cbc"
        }
      },
      {
        "id": "joblog.severity.20",
        "description": "%colors.jobLog.severity.20%",
        "defaults": {
          "dark": "#6db5f8",
          "light": "#6db5f8"
        }
      },
      {
        "id": "joblog.severity.30",
        "description": "%colors.jobLog.severity.30%",
        "defaults": {
          "dark": "#eed329",
          "light": "#eed329"
        }
      },
      {
        "id": "joblog.severity.40",
        "description": "%colors.jobLog.severity.40%",
        "defaults": {
          "dark": "#FFA500",
          "light": "#FFA500"
        }
      },
      {
        "id": "joblog.severity.50",
        "description": "%colors.jobLog.severity.50%",
        "defaults": {
          "dark": "#ee816b",
          "light": "#ee816b"
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "nls": "npx @vscode/l10n-dev export --outDir ./l10n ./src",
    "pseudo-nls": "npx @vscode/l10n-dev generate-pseudo -o ./l10n/ ./l10n/bundle.l10n.json ./package.nls.json",
    "types": "npx -p typescript tsc ./src/extension.ts --excludeDirectories ./src/test --declaration --allowJs --emitDeclarationOnly --outDir types --esModuleInterop -t es2020 --moduleResolution node"
  },
  "devDependencies": {
    "@halcyontech/vscode-ibmi-types": "^1.8.0",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.20.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "ts-loader": "^9.3.1",
    "typescript": "^4.7.4",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.10.0",
    "@vscode/l10n-dev": "^0.0.25"
  },
  "dependencies": {
    "dotenv": "^16.0.3"
  }
}
